plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.2.0"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.power.plugin'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = 'GitHubPackages'
        url = uri("https://maven.pkg.github .com/VincentCosta6/spark")
        credentials {
            username = "VincentCosta6"
            password = "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"// make sure you do not commit these values directly
        }
    }
}

dependencies {
    implementation 'com.github:spark:0.9.0-SNAPSHOT' // replace `0.7.3-SNAPSHOT` with the version you want to use
    compileOnly "io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}
tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.20.2")
    }
}
processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
shadowJar {
    archiveBaseName.set(rootProject.name)
    archiveVersion.set(version)
    archiveClassifier.set('')
}